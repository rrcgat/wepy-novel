<style lang="less">
  .grey-text {
    color: #9e9e9e;
  }
  .green-text {
    color: #8bc34a !important;
  }
  .book-item {
    display: flex;
    flex-wrap: wrap;
    padding: 20rpx;
    border-bottom: 1px solid #ddd;
    background-color: white;
  }
  .group {
    width: 100%;
    display: flex;
    padding: 8rpx;
    justify-content: space-between;
  }
  .group-item {
    display: flex;
    align-items: center;
    font-size: 30rpx;
    .grey-text;
  }
  .tag {
    font-size: 26rpx;
    border-radius: 30rpx;
    margin-right: 10rpx;
    padding: 0 10rpx;
    border: 1px solid;
  }
  .right-margin {
    margin-right: 10rpx;
  }
</style>
<template lang="pug">
  repeat(for="{{books}}" key="index" index="index" item="book")
    view(@tap.stop="detail({{book.id}})" @longpress="deleteStar({{index}}, {{book.id}})").book-item
      view.group
        view {{ book.book_name }}
        view.group-item {{ book.source }}
      view.group
        view.group-item
          text.iconfont.orange.right-margin &#xe601;
          text {{ book.author }}
        view.group-item {{ book.pub_date }}
      view.group
        view.group-item
          text.tag.orange {{ book.book_type }}
          text.tag.green-text {{ book.status }}
          text.tag {{ book.label }}
        view.group-item {{ book.word_count }} 字
</template>
<script>
  import wepy from 'wepy'
  import hosts from '@/config'
  import requests from '@/utils/requests'
  import { SET_BOOK } from '@/store/types'
  // import favoriteMixin from '@/mixins/favorite'

  export default class BookItem extends wepy.component {
    props = {
      books: {
        type: Array,
        default: [],
        twoWay: true
      }
    }

    methods = {
      detail(idx) {
        let self = this
        requests.get({ url: hosts.book, data: { id: idx } }).then((res) => {
          wepy.$store.dispatch({
            type: SET_BOOK,
            payload: res.data
          })
          self.$parent.$navigate('/pages/book')
        })
      },
      async deleteStar(idx, bid) {
        let res = await wepy.showModal({
          title: '提示',
          content: '是否删除？'
        })
        if (res.confirm) {
          this.books.splice(idx, 1)
          this.$apply()
          requests.delete({ url: hosts.star, data: { book_id: bid }, session: true }).then(res => {
            wepy.showToast({
              title: ' 删除成功'
            })
          })
        }
      }
    }
  }
</script>
